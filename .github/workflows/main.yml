name: Run Ollama with WSL 2 and Localtunnel

on:
  workflow_dispatch:

jobs:
  run-ollama:
    runs-on: windows-latest
    steps:
      - name: Install Ollama in WSL
        shell: powershell
        run: |
          wsl bash -c "curl -fsSL https://ollama.com/install.sh | sh"

      - name: Start Ollama server in WSL
        shell: powershell
        run: |
          wsl bash -c "ollama serve &"
          Start-Sleep -Seconds 10  # Wait for server to start

      - name: Get WSL IP
        shell: powershell
        run: |
          $WSL_IP = wsl hostname -I | ForEach-Object { $_.Split()[0] }
          echo "WSL_IP=$WSL_IP" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Install Node.js (required for Localtunnel)
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Localtunnel
        shell: powershell
        run: |
          npm install -g localtunnel

      - name: Start Localtunnel
        shell: powershell
        run: |
          Start-Process -NoNewWindow -FilePath "npx" -ArgumentList "localtunnel --port 11434 --host ${env:WSL_IP}"
          Start-Sleep -Seconds 5  # Wait for tunnel to establish
          curl https://loca.lt/mytunnelpassword

      - name: Display Localtunnel URL
        shell: powershell
        run: |
          # Localtunnel outputs the URL to stdout; simulate fetching it
          # In practice, you'd need to capture the output, here we assume a manual check
          echo "Check the logs for the Localtunnel URL (e.g., https://<random-subdomain>.loca.lt)"
          echo "Ollama is tunneled via Localtunnel on port 11434"

      - name: Keep workflow running for 5 hours
        shell: powershell
        run: |
          Start-Sleep -Seconds 18000
